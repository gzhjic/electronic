C51 COMPILER V9.54   IIC                                                                   05/23/2018 12:04:12 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN ..\Output\iic.obj
COMPILER INVOKED BY: E:\Keil\Keil_v5\C51\BIN\C51.EXE ..\Drivers\iic.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Drivers;..\App)
                    - DEBUG OBJECTEXTEND PRINT(..\Listing\iic.lst) OBJECT(..\Output\iic.obj)

line level    source

   1          #include "iic.h"
   2          
   3          sbit scl = P2^0;
   4          sbit sda = P2^1;
   5          
   6          
   7          void Delay5us()         //@12.000MHz
   8          {
   9   1              unsigned char i;
  10   1      
  11   1              _nop_();
  12   1              _nop_();
  13   1              i = 12;
  14   1              while (--i);
  15   1      }
  16          
  17          
  18          void iic_start(void)
  19          {
  20   1          sda = 1;
  21   1          Delay5us();
  22   1          scl = 1;
  23   1          Delay5us();
  24   1          sda = 0;
  25   1          Delay5us();
  26   1      }
  27          
  28          
  29          void iic_stop(void)
  30          {
  31   1          sda = 0;
  32   1          Delay5us();
  33   1          scl = 1;
  34   1          Delay5us();
  35   1          sda = 1;
  36   1          Delay5us();
  37   1      }
  38          
  39          
  40          void iic_ack(void)
  41          {
  42   1          uchar i = 200;
  43   1          scl = 1;
  44   1          Delay5us();
  45   1          while(sda&&i--);
  46   1          Delay5us();
  47   1          scl = 0;
  48   1      }
  49          
  50          
  51          void iic_nack(void)
  52          {
  53   1          scl = 1;
  54   1          Delay5us();
C51 COMPILER V9.54   IIC                                                                   05/23/2018 12:04:12 PAGE 2   

  55   1          sda = 1;
  56   1          Delay5us();
  57   1          scl = 0;
  58   1          Delay5us();
  59   1      }
  60          
  61          
  62          void iic_mack(void)
  63          {
  64   1          sda = 0;
  65   1          Delay5us();
  66   1          scl = 1;
  67   1          Delay5us();
  68   1          scl = 0;
  69   1          Delay5us();
  70   1          sda = 1;
  71   1      }
  72          
  73          
  74          void iic_write(uchar dat)
  75          {
  76   1          uchar i;
  77   1          for(i = 0; i < 8; i++)
  78   1          {
  79   2              scl = 0;
  80   2              Delay5us();
  81   2              if(dat&0x80)
  82   2                  sda = 1;
  83   2              else
  84   2                  sda = 0;
  85   2              Delay5us();
  86   2              scl = 1;
  87   2              dat<<=1;
  88   2          }
  89   1          scl = 0;
  90   1      }
  91          
  92          
  93          uchar iic_read(void)
  94          {
  95   1          uchar i,dat;
  96   1          sda = 1;
  97   1          for(i = 0; i < 8 ; i++)
  98   1          {
  99   2              dat<<=1;
 100   2              scl = 1;
 101   2              Delay5us();
 102   2              if(sda)
 103   2                  dat |= 1;
 104   2              Delay5us();
 105   2              scl = 0;
 106   2              Delay5us();
 107   2          }
 108   1          return dat;
 109   1      }
 110          
 111          
 112          void Write_At24c02(uchar add,uchar dat)
 113          {
 114   1          iic_start();
 115   1          iic_write(0xa0);
 116   1          iic_ack();
C51 COMPILER V9.54   IIC                                                                   05/23/2018 12:04:12 PAGE 3   

 117   1          iic_write(add);
 118   1          iic_ack();
 119   1          iic_write(dat);
 120   1          iic_ack();
 121   1          iic_stop();
 122   1      }
 123          
 124          
 125          void at24c02_read_buffer(uchar add,uchar *dat, uchar num)
 126          {
 127   1          uchar i;
 128   1          iic_start();
 129   1          iic_write(0xa0);
 130   1          iic_ack();
 131   1          iic_write(add);
 132   1          iic_ack();
 133   1          iic_start();
 134   1          iic_write(0xa1);
 135   1          iic_ack();
 136   1          for(i = 0;i<num;i++)
 137   1          {
 138   2              *dat = iic_read();
 139   2              iic_mack();
 140   2              dat++;
 141   2          }
 142   1          iic_nack();
 143   1          iic_stop();
 144   1      }
 145          
 146          
 147          uchar dac_read(uchar add)
 148          {
 149   1          uchar temp;
 150   1          iic_start();
 151   1          iic_write(0x90);
 152   1          iic_ack();
 153   1          iic_write(add);
 154   1          iic_ack();
 155   1          iic_start();
 156   1          iic_write(0x91);
 157   1          iic_ack();
 158   1          temp = iic_read();
 159   1          iic_nack();
 160   1          iic_stop();
 161   1          return temp;
 162   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    273    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
